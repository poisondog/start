cmake_minimum_required(VERSION 2.8.12)

project (${PROJECT_NAME} CXX C)

include (GenerateExportHeader)

set(CMAKE_SYSTEM_NAME Windows)
set(CMAKE_C_COMPILER  i586-mingw32msvc-gcc)
set(CMAKE_CXX_COMPILER  i586-mingw32msvc-g++)
set(CMAKE_RC_COMPILER i586-mingw32msvc-windres)

#set(CMAKE_FIND_ROOT_PATH /usr/i586-mingw32msvc)
#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
#set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
#set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(LIBRARY_NAME_WIN_STATIC "${LIBRARY_NAME}-win-static")
set(LIBRARY_NAME_WIN_SHARE "${LIBRARY_NAME}-win-share")

include_directories(${LIBRARY_HEADER_FOLDER} ${LIBRARY_CLASS_FOLDER} ${REFERENCE_INCLUDE})

#create library file
add_library(${LIBRARY_NAME_WIN_STATIC} STATIC ${LIBRARY_CLASS_FILES} ${LIBRARY_HEADER_FILES})
add_library(${LIBRARY_NAME_WIN_SHARE} SHARED ${LIBRARY_CLASS_FILES} ${LIBRARY_HEADER_FILES})

set_target_properties(${LIBRARY_NAME_WIN_STATIC} PROPERTIES LINKER_LANGUAGE CXX)
set_target_properties(${LIBRARY_NAME_WIN_SHARE} PROPERTIES LINKER_LANGUAGE CXX)
set_target_properties(${LIBRARY_NAME_WIN_STATIC} PROPERTIES OUTPUT_NAME ${LIBRARY_NAME})
set_target_properties(${LIBRARY_NAME_WIN_SHARE} PROPERTIES OUTPUT_NAME ${LIBRARY_NAME})
set_target_properties(${LIBRARY_NAME_WIN_STATIC} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
set_target_properties(${LIBRARY_NAME_WIN_SHARE} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
set_target_properties(${LIBRARY_NAME_WIN_STATIC} PROPERTIES VERSION ${VERSION})
set_target_properties(${LIBRARY_NAME_WIN_SHARE} PROPERTIES VERSION ${VERSION})

#set_target_properties(${LIBRARY_NAME_WIN_SHARE} PROPERTIES DEFINE_SYMBOL "COMPILING_DLL")

generate_export_header(${LIBRARY_NAME_WIN_STATIC})
generate_export_header(${LIBRARY_NAME_WIN_SHARE})

#create executable file
add_executable(${PROJECT_NAME}.exe ${MAIN_CLASS_FILES})
target_link_libraries(${PROJECT_NAME}.exe ${LIBRARY_NAME_WIN_STATIC})
